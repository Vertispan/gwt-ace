version: 2
jobs:
  build: # builds the project with bazel and copies the source so maven can handle it
    docker:
      - image: vertispan/openjdk:8u222-jdk-stretch
    steps:
      - checkout
      - run:
          name: Initialize Bazel
          command: |
            # limit the bazel jobs due to failures in circleci
            echo "build --jobs=1" >> .bazelrc
            echo "build --local_ram_resources=512" >> .bazelrc
            echo "--host_jvm_args=-Xmx512m" >> .bazelrc
            # download dependencies, ensure nothing is stale
            bazel sync
      - run:
          name: Run bazel build to produce jsinterop classes, copy to maven project
          command: ATTEMPTS=5 ./build.sh
      - persist_to_workspace:
          root: ~/project
          paths: maven/src
  deploy-to-maven-repos: # pushes to both sonatype and our own artifactory repo
    docker:
      - image: vertispan/openjdk:8u222-jdk-stretch
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Build maven jars and deploy
          command: |
            cd maven
            mvn deploy -Prelease -Dgpg.skip=true \
            -s ../.circleci/settings.xml -Dossrh.username=$SONATYPE_USERNAME -Dossrh.password=$SONATYPE_APIKEY
      - run:
          name: Deploy to Vertispan repo
          command: |
            cd maven
            mvn deploy -Prelease -Dgpg.skip=true \
            -DaltSnapshotDeploymentRepository=vertispan-snapshots::https://repo.vertispan.com/gwt-snapshot/ \
            -s ../.circleci/settings.xml -Dartifactory.username=$ARTIFACTORY_USER -Dartifactory.password=$ARTIFACTORY_APIKEY


workflows:
  version: 2
  ci_build:
    jobs:
      - build
      - deploy-to-maven-repos:
          requires:
            - build
          context: deploy-keys